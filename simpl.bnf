Root    ::= Stmt
        <$>

Stmt    ::= Fact Stmt'
        <$>

Stmt'   ::= epsilon
        <+> , Fact Stmt'
        <$>

Fact    ::= epsilon
        <+> Id Fact'
        <+> module Id { Stmt }
        <$>

Fact'   ::= epsilon
        <+> = Expr
        <$>

Expr    ::= RtoL Expr' LtoR
        <+> Expr' LtoR
        <$>

Expr'   ::= Id Extract
        <+> Number
        <$>

Extract ::= epsilon
        <+> ( Stmt ) . Id
        <+> . Id
        <$>

LtoR    ::= epsilon
        <+> Binary Expr' LtoR
        <$>

RtoL    ::= !
        <+> -
        <$>

Binary  ::= + <+> - <+> * <+> / <+> > <+> >= <+> < <+> <=
        <+> == <+> != <+> | <+> || <+> & <+> && <$>
